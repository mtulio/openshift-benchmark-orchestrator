#!/bin/sh


cmd_run_main() {
  source $(dirname $0)/src/cluster_jobs
  
  local job_alias="${OPT_JOB_GROUP:-}"
  local job_groupKey="byGroup-"
  if [[ -z "${job_alias}" ]]; then
    job_alias="${OPT_JOB_NAME}"
    job_groupKey="byName-"
  fi
  local result_path_base="${WORKDIR_RESULTS}/${job_groupKey}${job_alias}"
  local oc_cmd="$(yq -r ".oc_path" ${CLUSTER_CFG_RENDERED}) --kubeconfig ${CLUSTER_KUBECONFIG} "
  local node_label=$(yq -r ".benchmark_profiles.${OPT_BENCH_PROFILE}.target_node_strategy.filter_by_label" ${GLOBAL_CONFIG})
  local node_index=$(yq -r ".benchmark_profiles.${OPT_BENCH_PROFILE}.target_node_strategy.index" ${GLOBAL_CONFIG})
  local job_stdout=${result_path_base}/job_stdout-${OPT_JOB_NAME}-${OPT_CLUSTER_NAME}.txt
  
  mkdir -p ${result_path_base}

  echo "#cluster=${OPT_CLUSTER_NAME}> Collecting cluster objects..." | tee -a ${job_stdout}
  local cluster_manifests_path=${result_path_base}/cluster-manifests-${OPT_CLUSTER_NAME}
  mkdir -p ${cluster_manifests_path}
  ${oc_cmd} get nodes -o yaml > ${cluster_manifests_path}/nodes.yaml
  ${oc_cmd} get infrastructures -o yaml > ${cluster_manifests_path}/infrastructures.yaml
  ${oc_cmd} get clusterversion -o yaml > ${cluster_manifests_path}/clusterversion.yaml
  ${oc_cmd} get machines -n openshift-machine-api -o yaml > ${cluster_manifests_path}/machines.yaml

  local nodes=($(${oc_cmd} get nodes -l ${node_label} -o jsonpath="{.items[${node_index}].metadata.name}"))
  echo "#cluster=${OPT_CLUSTER_NAME}> Found [${#nodes[@]}] nodes: ${nodes[@]}" | tee -a ${job_stdout}

  for node in ${nodes[@]}; do
    echo "#cluster=${OPT_CLUSTER_NAME}> Running tasks as user [$($oc_cmd whoami)], API [$($oc_cmd whoami --show-server)] and node [${node}]"  | tee -a ${job_stdout}
    ${oc_cmd} debug node/${node} -- chroot /host /bin/bash -c \
      "hostname; lsblk" 2>/dev/null |tee -a ${job_stdout}
    (
      for task_name in $(yq -r ".benchmark_profiles.${OPT_BENCH_PROFILE}.task_profiles[]?" ${GLOBAL_CONFIG}); do
        task_${task_name} ${node}
      done
    ) &
    PIDS+=($!)
  done

  echo "#cluster=${OPT_CLUSTER_NAME}> INFO: Waiting for tests to complete in all nodes..." | tee -a ${job_stdout}
  wait "${PIDS[@]}"
  echo "#cluster=${OPT_CLUSTER_NAME}> INFO: Done tests ran in all nodes" | tee -a ${job_stdout}

  task_prometheus_dump || true
}
