
config:
  workdir: ./.local

dependencies:
  - name: oc
    path: /usr/bin/oc
    env_name: OC_CLI

    # Extract from CI: to run oc adm release extract --tools {image}
  - name: openshift-install-4.9.0-0.nightly-2021-08-13-053517
    path: ./.local/bin/penshift-install-4.9.0-0.nightly-2021-08-13
    type: extract
    image: registry.ci.openshift.org/ocp/release:4.9.0-0.ci-2021-08-12-161315
    env_name: OC_INST

  # Build installer from src
  # TODO add instructions to build
  # Ref PR: https://github.com/mtulio/installer/pull/4
  # $(which time) -v ./hack/build.sh
  - name: openshift-installer-4.9-gp3m6i-monit-ebsOpt-1xEBS
    path: ./.local/bin/openshift-installer-4.9-gp3m6i-monit-ebsOpt-1xEBS
    type: git
    repo: git@github.com:mtulio/installer.git
    version: SPLAT-254s1
    env_name: OC_INST
  - name: openshift-installer-4.9-gp3m6i-monit-ebsOpt-2xEBS
    path: ./.local/bin/openshift-installer-4.9-gp3m6i-monit-ebsOpt-2xEBS
    env_name: OC_INST
    type: git
    repo: git@github.com:mtulio/installer.git
    version: SPLAT-254s1v2

defaults:
  aws:
    baseDomain: devcluster.openshift.com
    controlPlane:
      vm_type: m5.xlarge
      # TODO: check if installer supports it
      vm_spot_price: 0.192
    compute:
      vm_type: m5.xlarge
      # TODO: check if installer supports it
      vm_spot_price: 0.192
    vol_type: gp2
    vol_size: 128  


# Cluster definition to provision
cluster_profiles:
  aws_m5x1xgp2:
    name: aws_m5x1xgp2
    installer: openshift-installer-4.9-gp3m6i-monit-ebsOpt-1xEBS
    platform: aws
  aws_m5x2xgp2:
    name: aws_m5x2xgp2
    installer: openshift-installer-4.9-gp3m6i-monit-ebsOpt-2xEBS
    platform: aws
  aws_m5x1xgp3:
    name: aws_m5x1xgp3
    installer: openshift-installer-4.9-gp3m6i-monit-ebsOpt-1xEBS
    platform: aws
  aws_m5x2xgp3:
    name: aws_m5x2xgp3
    installer: openshift-installer-4.9-gp3m6i-monit-ebsOpt-2xEBS
    platform: aws
    vol_type: gp3
  aws_m5x1xgp3_64G:
    name: aws_m5x1xgp3
    installer: openshift-installer-4.9-gp3m6i-monit-ebsOpt-1xEBS
    platform: aws
    vol_type: gp3
    vol_size: 64
  aws_m5x2xgp3_64G:
    name: aws_m5x1xgp3
    installer: openshift-installer-4.9-gp3m6i-monit-ebsOpt-2xEBS
    platform: aws
    vol_type: gp3
    vol_size: 64


# Benchmark test Configuration
benchmark_profiles:
  fio_defaults:
    image: ljishen/fio
    base_dir: "/var/lib/etcd/"
    loop: 100
    commands: |>
      --rw=write \
      --ioengine=sync \
      --fdatasync=1 \
      --size=200m \
      --bs=2300 \
      --directory=\"\$TEST_DIR\" \
      --name=\"fio_io_\${l}\${i}\" \
      --output-format=json \
      --output=\"\$TEST_DIR/fio_results_write_\${l}\${i}.json\" ;


  # FIO embeeded on etcd-perf image
  fio_etcd_defaults:
    image: quay.io/openshift-scale/etcd-perf
    base_dir: "/var/lib/etcd/"
    loop: 1


# Create runner setup (step before run)
# runner-profile = cluster_profile + benchmark_profile
runner_profiles:
  b1_t1:
    cluster_profile: aws_m5x1xgp2
    benchmark_profiles:
      - fio_defaults
      - fio_etcd_defaults
    # 0 : first node on index list
    # * : all nodes found on label list
    target_node_strategy:
      filter_by_label: node-role.kubernetes.io/master=
      index: 0

  b1_t2:
    cluster_profile: aws_m5x2xgp2
    benchmark_profiles:
      - fio_defaults
      - fio_etcd_defaults
    # 0 : first node on index list
    # * : all nodes found on label list
    target_node_strategy:
      filter_by_label: node-role.kubernetes.io/master=
      index: 0

  b1_t3:
    profile: aws_m5x1xgp3
    benchmark_profiles:
      - fio_defaults
      - fio_etcd_defaults
    # 0 : first node on index list
    # * : all nodes found on label list
    target_node_strategy:
      filter_by_label: node-role.kubernetes.io/master=
      index: 0
  
  b1_t4:
    profile: aws_m5x2xgp3
    benchmark_profiles:
      - fio_defaults
      - fio_etcd_defaults
    # 0 : first node on index list
    # * : all nodes found on label list
    target_node_strategy:
      filter_by_label: node-role.kubernetes.io/master=
      index: 0


# Start to run the benchmark tests to a cluster (defined on runner-profile)
runner:
  - b1_t1
  - b1_t2
